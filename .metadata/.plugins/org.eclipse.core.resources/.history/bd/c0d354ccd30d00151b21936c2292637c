LOCAL_PATH := $(call my-dir)

include $(CLEAR_VARS)



##PCL libraries - full support
PCL_STATIC_LIB_DIR := C:/android-ndk-r10d/pcl/pcl-android/lib
BOOST_STATIC_LIB_DIR := C:/android-ndk-r10d/pcl/boost-android/lib
FLANN_STATIC_LIB_DIR := C:/android-ndk-r10d/pcl/flann-android/lib
#
#$(call 	$PCL_STATIC_LIB_DIR blub)			
PCL_STATIC_LIBRARIES :=  pcl_common pcl_geometry pcl_kdtree pcl_octree pcl_sample_consensus \
							pcl_surface pcl_features pcl_io pcl_keypoints pcl_recognition \
							pcl_search pcl_tracking pcl_filters pcl_io_ply pcl_ml \
							pcl_registration pcl_segmentation
BOOST_STATIC_LIBRARIES := boost_date_time boost_iostreams boost_regex  \
							boost_filesystem boost_program_options boost_signals \
							boost_thread boost_system
FLANN_STATIC_LIBRARIES := flann_cpp_s flann_s

										
define build_pcl_static
	include $(CLEAR_VARS)
	LOCAL_MODULE:=$1
	LOCAL_SRC_FILES:=$(PCL_STATIC_LIB_DIR)/lib$1.a
	include $(PREBUILT_STATIC_LIBRARY)
endef

define build_boost_static
	include $(CLEAR_VARS)
	LOCAL_MODULE:=$1
	LOCAL_SRC_FILES:=$(BOOST_STATIC_LIB_DIR)/lib$1.a
	include $(PREBUILT_STATIC_LIBRARY)
endef

define build_flann_static
	include $(CLEAR_VARS)
	LOCAL_MODULE:=$1
	LOCAL_SRC_FILES:=$(FLANN_STATIC_LIB_DIR)/lib$1.a
	include $(PREBUILT_STATIC_LIBRARY)
endef

$(foreach module,$(PCL_STATIC_LIBRARIES),$(eval $(call build_pcl_static,$(module))))
$(foreach module,$(BOOST_STATIC_LIBRARIES),$(eval $(call build_boost_static,$(module))))
$(foreach module,$(FLANN_STATIC_LIBRARIES),$(eval $(call build_flann_static,$(module))))					

								
LOCAL_CFLAGS := -D_ARM_ASSEM_
LOCAL_ARM_MODE := thumb


#If you don't want the compiler to automatically make you code faster and !#parallel remove "-O2 -ftree-vectorize"
LOCAL_CFLAGS += -mfloat-abi=softfp -mfpu=neon -march=armv7 -mthumb -O3

include $(CLEAR_VARS)
OPENCV_LIB_TYPE := STATIC

#include /home/e/reps/OpenCV-android-sdk/sdk/native/jni/OpenCV.mk
#PATH:=/home/e/workspace_opencv/
LOCAL_C_INCLUDES += C:/android-ndk-r10d/pcl/pcl-android/include/pcl-1.6 \
		         	C:/android-ndk-r10d/pcl/boost-android/include \
					C:/android-ndk-r10d/pcl/eigen \
					C:/android-ndk-r10d/pcl/flann-android/include \
					#/home/e/reps/android-ndk-r10d/pcl/pcl-android/include/pcl-1.6/pcl/sample_consensus/impl \
					
					#pcl libraryd
LOCAL_LDFLAGS += -LC:/android-ndk-r10d/pcl/pcl-android/lib \
				 -LC:/android-ndk-r10d/boost-android/lib \
				 -LC:/android-ndk-r10d/pcl/flann-android/lib
				  				
LOCAL_C_INCLUDES += C:/android-ndk-r10d/pcl/pcl-android/include/pcl-1.6 \
					C:/android-ndk-r10d/pcl/boost-android/include \
					C:/android-ndk-r10d/pcl/eigen \
					C:/android-ndk-r10d/pcl/flann-android/include \
			
LOCAL_STATIC_LIBRARIES   += pcl_common pcl_geometry pcl_kdtree pcl_octree pcl_sample_consensus \
							pcl_surface pcl_features pcl_filters pcl_io pcl_keypoints pcl_recognition \
							pcl_search pcl_tracking  pcl_io_ply pcl_ml \
							pcl_registration pcl_segmentation 
							
LOCAL_STATIC_LIBRARIES   += boost_date_time boost_iostreams boost_regex boost_system \
							boost_filesystem boost_program_options boost_signals \
							boost_thread		
#LOCAL_STATIC_LIBRARIES   += flann_cpp_s flann_s			
					

LOCAL_MODULE    := mixed_sample
LOCAL_SRC_FILES += jni_part.cpp functions.cpp
LOCAL_LDLIBS +=  -llog -ldl -lstdc++ -lc -lm  -lGLESv2 -lgomp

			
#BYPASS_INCLUDE_PATH:=../libs/pcl

include $(BUILD_SHARED_LIBRARY)

#$(call import-add-path, ../libs/pcl/pcl-android/include/pcl-1.6/)
#$(call import-add-path, ../../libs/jni)


